// Remember...

#include<bits/stdc++.h>

#define F first
#define S second
#define PB push_back
#define sz(s) int((s).size())
#define bit(n,k) (((n)>>(k))&1)

using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;

const int maxn=2e5+10,mod=1e9+7;
const ll inf=1e18;

bool is[maxn], IS;
int mark[maxn];
vector<pii> v[maxn];

void dfs(int u){
    mark[u]=1;
    for(pii p:v[u]){
	if(mark[p.F]==1) is[p.S]=1, IS=1;
	if(mark[p.F]==0) dfs(p.F);
    }
    mark[u]=2;
}

int main(){
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie();

    int n,m; cin>>n>>m;
    for(int i=0;i<m;i++){
	int a,b; cin>>a>>b;
	v[a].PB({b,i});
    }
    for(int i=1;i<=n;i++){
	if(mark[i]==0) dfs(i);
    }
    cout<<(IS ? 2 : 1)<<"\n";
    for(int i=0;i<m;i++)
	cout<<is[i]+1<<" ";
    return cout<<endl,0;
}
// Deathly mistakes:
//  * Read the problem carefully.
//  * Check maxn.
//  * Overflows.


// #pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math")
// #pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
