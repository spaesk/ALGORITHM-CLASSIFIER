#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define MAX ((int)(1e6 + 5))
#define MAX_X ((int)(1e6 + 2))
#define pi (2.0*acos(0))
#define M ((ll)(1e9 + 7))
#define NN ((ll)(305))
#define N ((int)(1e5 + 5))
#define eps (0)
#define log 20


using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef unsigned long long ull;

/*fast io
ios_base::sync_with_stdio(false);
cin.tie(NULL);
*/


typedef tree < pair < int, int >,  null_type,  less < pair < int, int > >,  rb_tree_tag,  tree_order_statistics_node_update > o_set;
/// o_set s;
/// s.order_of_key(k) : Number of items strictly smaller than k .
/// *(s.find_by_order(k)) : K-th element in a set (counting from zero).

vector < int > v[N];

bool vis[N];

int okk[N];

int main()
{
    int n , m;
    scanf("%d %d",&n,&m);
    vector < int > vec;
    for(int i = 1; i<=n; i++) vec.push_back(i);
    while(m--){
        int a ,b;
        scanf("%d %d",&a,&b);
        v[a].push_back(b);
        v[b].push_back(a);
    }
    int ans = 0;

    queue < int > q;
    while(vec.size()>0){
        q.push(vec.back());
        vis[vec.back()] = 1;
        vec.erase(vec.end()-1);
        while(!q.empty()){
            int a = q.front();
            q.pop();
            for(int b:v[a]){
                if(!vis[b]){
                    okk[b] = a;
                }
            }
            for(int b:vec){
                if(okk[b]!=a){
                    vis[b] = 1;
                    q.push(b);
                }
            }
            vec.clear();
            for(int b:v[a]){
                if(okk[b]==a) vec.push_back(b);
            }
        }
        if(vec.size()>0) ans++;
    }

    printf("%d\n",ans);
    return 0;
}
