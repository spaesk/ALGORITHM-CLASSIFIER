#include <bits/stdc++.h>

#define f first
#define s second
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define ll long long
#define ull unsigned long long
#define db double
#define ld long double
#define pii pair<int, int>
#define pll pair<ll, ll>
#define pli pair<ll, int>
#define px pair<db, db>
#define mp make_pair
#define pb push_back
#define eb emplace_back
#define input(a) for (auto& el : a) cin >> el;
#define output(a) cout << '!'; for (auto& el : a) cout << el << ' '; cout << '\n'; cout.flush();
#define sz(el) int(el.size())
#define sq(a) ((a) * (a))
#define xll bitset<128>
#define xmin(a,b) a = min(a, b)
#define xmax(a,b) a = max(a, b)
#define sun(a) sort(all(a)); a.resize(unique(all(a)) - a.begin());
/**/  /// extra
//#define forn(i,n) for (int i = 0; i < n; ++i)
//#define rforn(i,n) for (int i = n - 1; i >= 0; --i)
#define bn '\n'
#define vi vector<int>
#define vii vector<vi>
#define vl vector<ll>
#define vll vector<vl>
//#define G vector<vector<pii>>
#define GVE vector<vector<edge>>
#define usi unordered_set<int>
#define usp set<pii>
/**/

using namespace std;

const int INF = 1'000'000'017;
const ll LLINF = 1'000'000'000'000'000'017LL;
const ld inf = 1.0 / 0.0;
const ld eps = 1e-9;
const int MOD = 998244353;

//mt19937_64 rng(chrono::high_resolution_clock::now().time_since_epoch().count());

//uniform_int_distribution<int> uid(l, r); [l, r]
//int x = uid(rng);

const int N = 5e3 + 7;

vector<pii> g[N];
int ans[N];

vector<int> top;
bool used[N];

void dfst(int v) {
    used[v] = 1;
    for (pii& u : g[v]) {
        if (!used[u.f]) {
            dfst(u.f);
        }
    }
    top.eb(v);
}

int mark[N];
int c = 1;

void dfs(int v) {
    mark[v] = 1;
    for (pii& u : g[v]) {
        if (!mark[u.f]) {
            dfs(u.f);
            ans[u.s] = 1;
        } else if (mark[u.f] == 1) {
            c = 2;
            ans[u.s] = 2;
        } else {
            ans[u.s] = 1;
        }
    }
    mark[v] = 2;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int n, m;
    cin >> n >> m;
    for (int i = 0; i < m; ++i) {
        int u, v;
        cin >> u >> v;
        g[u].eb(v, i);
    }
    for (int v = 1; v <= n; ++v) {
        if (!used[v]) {
            dfst(v);
        }
    }
    reverse(all(top));
    for (int v : top) {
        if (!mark[v]) {
            dfs(v);
        }
    }
    cout << c << '\n';
    for (int i = 0; i < m; ++i) {
        cout << ans[i] << ' ';
    }
    return 0;
}
