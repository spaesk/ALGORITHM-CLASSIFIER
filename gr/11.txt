#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
#define int long long
#define double long double
#define mod 1000000007
#define maxN 5005
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define pip pair<int,pii>
#define vi vector<int>
#define vpi vector<pii >
#define endl "\n"
#define fastIO ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define FOR(a,b,c) for(int(a) = b;a<=c;a++)
#define repr(a,b,c) for(int(a) = b;a>=c;a--)
#define rep(i,n) for(int(i) = 0;i<n;i++)
#define fir first
#define sec second
#define beg begin()
#define e end()
#define len length()
using namespace std;
using namespace __gnu_pbds;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
typedef tree<int,null_type,less_equal<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_multiset;
const int inf = 0x3f3f3f3f3f3f3f3fll;
vi g[maxN];
int vis[maxN],curr[maxN];
map<pii,int> col;
int ans = 1;
void dfs(int x){
  vis[x] = 1;
  curr[x] = 1;
  for(int y:g[x]){
    if(!vis[y]){
      col[mp(x,y)] = 1;
      dfs(y);
    }
    else if(curr[y]){
      ans = 2;
      col[mp(x,y)] = 2;
    }
    else
      col[mp(x,y)] = 1;
  }
  curr[x] = 0;
}
int32_t main(){
  fastIO;
  int n,m;
  cin>>n>>m;
  int x,y;
  pii ord[m];
  rep(i,m){
    cin>>x>>y;
    g[x].pb(y);
    ord[i] = mp(x,y);
  }
  FOR(i,1,n){
    if(vis[i])continue;
    dfs(i);
  }
  cout<<ans<<endl;
  rep(i,m)
    cout<<col[ord[i]]<<' ';
  return 0;
}
