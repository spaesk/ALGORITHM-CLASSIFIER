#pragma GCC target("sse,sse2,sse3,ssse3,sse4,abm,mmx,avx,avx2,popcnt,tune=native")
//#pragma GCC optimize("SEX_ON_THE_BEACH")	
#pragma GCC optimize("fast-math")
#pragma GCC optimize("unroll-loops")
#pragma comment(linker, "/STACK:36777216")

#define _CRT_SECURE_NO_WARNINGS
#include <chrono>
#include <set>
#include <map>
#include <deque>
#include <cmath>
#include <queue>
#include <cassert>
#include <random>
#include <bitset>
#include <iomanip>
#include <numeric>
#include <time.h>//////////////
#include <ctime>
#include <string>
#include <cstdio>
#include <vector>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
//#define endl '\n'
#define mp make_pair
#define pbc push_back
#define pob pop_back()
#define empb emplace_back
#define queuel queue<long long>
#define sqr(a) ((a) * (a))
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define matrix vector<vector<ll>>
#define pin(p) cin >> p.first >> p.second;
#define rev(v) reverse(v.begin(), v.end());
#define mx(v) max_element(v.begin(), v.end());
#define mn(v) min_element(v.begin(), v.end());
#define sout(s, c) for (auto i : s) cout << i << c;
#define pout(p) cout << p.first << " " << p.second;
#define er(v, l, r) erase(v.begin() + l, v.begin() + r);
#define vin(v) for (ll i = 0; i < v.size(); ++i) cin >> v[i];
#define vout(v, c) for (int i = 0; i < v.size(); ++i) cout << v[i] << c;
#define pushi(v, a) for (int i = 0; i < a.size(); ++i) v.push_back(a[i]);
#define sin(s, n) for (int i = 0; i < n; ++i){int a; cin >> a; s.insert(a); }
#define fastio() ios_base::sync_with_stdio(0); cout.tie(0); cin.tie(0); srand(time(NULL))
#define sp system("pause")
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
using namespace std;//Р     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р Р‹Р Р†РІР‚С›РЎС›Р     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р    Р   Р  РІР‚в„–Р   Р  Р вЂ№Р  Р Р‹Р РЋРЎСџР     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР    Р  Р вЂ Р  РІР‚С™Р Р†РІР‚С›РЎС›Р   Р Р†Р вЂљРІвЂћСћР  РІР‚в„ўР вЂ™Р’В¦Р      Р    Р   Р Р†Р вЂљ Р    Р  Р вЂ Р  РІР‚С™Р РЋРІвЂћСћР   Р  Р вЂ№Р  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р Р‹Р Р†РІР‚С›РЎС›Р     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р    Р   Р  РІР‚в„–Р   Р  Р вЂ№Р  Р Р‹Р РЋРЎСџР     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР    Р  Р вЂ Р  РІР‚С™Р Р†РІР‚С›РЎС›Р   Р Р†Р вЂљРІвЂћСћР  РІР‚в„ўР вЂ™Р’В¦Р      Р    Р   Р Р†Р вЂљ Р    Р  Р вЂ Р  РІР‚С™Р РЋРІвЂћСћР   Р  Р вЂ№Р  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р Р‹Р Р†РІР‚С›РЎС›Р     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р    Р   Р  РІР‚в„–Р   Р  Р вЂ№Р  Р Р‹Р РЋРЎСџР     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР    Р  Р вЂ Р  РІР‚С™Р Р†РІР‚С›РЎС›Р   Р Р†Р вЂљРІвЂћСћР  РІР‚в„ўР вЂ™Р’В¦Р      Р    Р   Р Р†Р вЂљ Р    Р  Р вЂ Р  РІР‚С™Р РЋРІвЂћСћР   Р  Р вЂ№Р  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р Р‹Р Р†РІР‚С›РЎС›Р     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р    Р   Р  РІР‚в„–Р   Р  Р вЂ№Р  Р Р‹Р РЋРЎСџР     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР    Р  Р вЂ Р  РІР‚С™Р Р†РІР‚С›РЎС›Р   Р Р†Р вЂљРІвЂћСћР  РІР‚в„ўР вЂ™Р’В¦Р      Р    Р   Р Р†Р вЂљ Р    Р  Р вЂ Р  РІР‚С™Р РЋРІвЂћСћР   Р  Р вЂ№Р  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р Р‹Р Р†РІР‚С›РЎС›Р     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р    Р   Р  РІР‚в„–Р   Р  Р вЂ№Р  Р Р‹Р РЋРЎСџР     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР    Р  Р вЂ Р  РІР‚С™Р Р†РІР‚С›РЎС›Р   Р Р†Р вЂљРІвЂћСћР  РІР‚в„ўР вЂ™Р’В¦Р      Р    Р   Р Р†Р вЂљ Р    Р  Р вЂ Р  РІР‚С™Р РЋРІвЂћСћР   Р  Р вЂ№Р  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р Р‹Р Р†РІР‚С›РЎС›Р     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р    Р   Р  РІР‚в„–Р   Р  Р вЂ№Р  Р Р‹Р РЋРЎСџР     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР    Р  Р вЂ Р  РІР‚С™Р Р†РІР‚С›РЎС›Р   Р Р†Р вЂљРІвЂћСћР  РІР‚в„ўР вЂ™Р’В¦Р      Р    Р   Р Р†Р вЂљ Р    Р  Р вЂ Р  РІР‚С™Р РЋРІвЂћСћР   Р  Р вЂ№Р  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р Р‹Р Р†РІР‚С›РЎС›Р     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р    Р   Р  РІР‚в„–Р   Р  Р вЂ№Р  Р Р‹Р РЋРЎСџР     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР    Р  Р вЂ Р  РІР‚С™Р Р†РІР‚С›РЎС›Р   Р Р†Р вЂљРІвЂћСћР  РІР‚в„ўР вЂ™Р’В¦Р      Р    Р   Р Р†Р вЂљ Р    Р  Р вЂ Р  РІР‚С™Р РЋРІвЂћСћР   Р  Р вЂ№Р  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р Р‹Р Р†РІР‚С›РЎС›Р     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р    Р   Р  РІР‚в„–Р   Р  Р вЂ№Р  Р Р‹Р РЋРЎСџР     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР    Р  Р вЂ Р  РІР‚С™Р Р†РІР‚С›РЎС›Р   Р Р†Р вЂљРІвЂћСћР  РІР‚в„ўР вЂ™Р’В¦Р      Р    Р   Р Р†Р вЂљ Р    Р  Р вЂ Р  РІР‚С™Р РЋРІвЂћСћР   Р  Р вЂ№Р  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р Р‹Р Р†РІР‚С›РЎС›Р     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р    Р   Р  РІР‚в„–Р   Р  Р вЂ№Р  Р Р‹Р РЋРЎСџР     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР    Р  Р вЂ Р  РІР‚С™Р Р†РІР‚С›РЎС›Р   Р Р†Р вЂљРІвЂћСћР  РІР‚в„ўР вЂ™Р’В¦Р      Р    Р   Р Р†Р вЂљ Р    Р  Р вЂ Р  РІР‚С™Р РЋРІвЂћСћР   Р  Р вЂ№Р  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р Р‹Р Р†РІР‚С›РЎС›Р     Р    Р   Р Р†Р вЂљРІвЂћвЂ“Р    Р   Р  РІР‚в„–Р   Р  Р вЂ№Р  Р Р‹Р РЋРЎСџР     Р   Р  РІР‚ Р   Р Р†Р вЂљРЎв„ўР  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂєР    Р  Р вЂ Р  РІР‚С™Р Р†РІР‚С›РЎС›Р   Р Р†Р вЂљРІвЂћСћР  РІР‚в„ўР вЂ™Р’В¦Р      Р    Р   Р Р†Р вЂљ Р    Р  Р вЂ Р  РІР‚С™Р РЋРІвЂћСћР   Р  Р вЂ№Р  Р вЂ Р Р†Р вЂљРЎвЂєР РЋРЎвЂє
					//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
const int MAXN = 300007;
const ll inf = 2e9 + 239;
const ld EPS = 1e-4;
const ld PI = acos(-1);
int mod = (int)998244353;
const int MOD7 = 1000000007;
const int MOD9 = 1000000009;
const int a228 = 18;
const ll kekmod = 1791791791;
const ll bestmod = 1148822869;
vector<ll> mods = { kekmod,bestmod,mod,MOD9,1000000007 };
vector<ll> hashpows = { 29,31,37,43,47,53,179,229 };
mt19937 rnd(chrono::high_resolution_clock::now().time_since_epoch().count() + 228 + 'i' + 'q' + 1337 + 1488);
ll MOD = mods[rnd() % mods.size()];
ll hashpow = hashpows[rand() % hashpows.size()];
const int PMAX = (int)1e6 + 1;
vector<vector<pair<int,int>>> g(MAXN);
vector<int> cl(MAXN);
bool f = 0;
vector<int> ans(MAXN);
void dfs(int v)
{
	cl[v] = 1;
	for (auto i : g[v])
	{
		if (cl[i.first] == 1)
		{
			f = 1;
			return;
		}
		if (!cl[i.first])
		{
			dfs(i.first);
		}
	}
	cl[v] = 2;
}
void dfs2(int v, int pr)
{
	cl[v] = 1;
	for (auto i : g[v])
	{
		if (cl[i.first] == 1)
		{
			ans[i.second] = (1 ^(pr-1)) + 1;
		}
		if (cl[i.first] == 2)
		{
			ans[i.second] = pr;
		}
		if (!cl[i.first])
		{
			ans[i.second] = pr;
			dfs2(i.first, ans[i.second]);
		}
	}
	cl[v] = 2;
}
signed main()
{
	fastio();
	int n, m;
	cin >> n >> m;
	for (int i = 0; i < m; ++i)
	{
		int a, b;
		cin >> a >> b;
		g[a].pbc({ b,i });
	}
	for (int i = 1; i <= n; ++i)
	{
		if (!cl[i]) dfs(i);
	}
	if (!f)
	{
		cout << 1 << endl;
		for (int i = 0; i < m; ++i) cout << 1 << ' ';
	}
	else
	{
		cl.assign(MAXN, 0);
		for (int i = 1; i <= n; ++i) if (!cl[i]) dfs2(i,2);
		cout << 2 << endl;
		for (int i = 0; i < m; ++i)
		{
			cout << ans[i] << ' ';
		}
	}
//	sp;
}