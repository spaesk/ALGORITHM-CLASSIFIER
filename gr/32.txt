#include <bits/stdc++.h>
using namespace std;
#define pb  push_back
#define ll  long long
#define vi  vector<ll >
#define vvi vector<vi >
#define all(x) x.begin(), x.end()

int n, m;
vvi g, h;
vi  u, x, y;

bool dfs(int v, int r) {
    u[v] = 1;
    for (int i = 0; i < g[v].size(); ++i) {
        int to = y[g[v][i]];
        if (to == r) return true;
        if (!u[to]) {
            if (dfs(to, r))
                return true;
        }
    }
    return false;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin >> n >> m;
    g.resize(n);
    h.resize(n);
    x.resize(m);
    y.resize(m);
    for (int i = 0; i < m; ++i) {
        cin >> x[i] >> y[i]; --x[i]; --y[i];
        g[x[i]].pb(i);
        h[y[i]].pb(i);
    }
    bool cycle = false;
    for (int i = 0; i < n; ++i) {
        u.assign(n, 0);
        if (dfs(i, i))
            cycle = true;
    }
    if (!cycle) {
        cout << 1 << endl;
        for (int i = 0; i < m; ++i)
            cout << 1 << " ";
        return 0;
    }
    vi res(m, 0);
    for (int v = 0; v < n; ++v) {
        for (int i = 0; i < g[v].size(); ++i) {
            int j = g[v][i];
            if (res[j] == 0)
                res[j] = 1;
        }
        for (int i = 0; i < h[v].size(); ++i) {
            int j = h[v][i];
            if (res[j] == 0)
                res[j] = 2;
        }
    }
    cout << 2 << endl;
    for (int j = 0; j < m; ++j)
        cout << res[j] << " ";

    return 0;
}