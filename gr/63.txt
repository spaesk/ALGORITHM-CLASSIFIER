#include <bits/stdc++.h>

#define I inline
#define fi first
#define se second
#define R register
#define LL long long
#define mp make_pair
#define reg register int
#define pii pair<int,int>
#define cr const reg&
using namespace std;
const int inf = 2147483647;
const int N = 1e5 + 1;

I int _max(cr x, cr y) {return x > y ? x : y;}
I int _min(cr x, cr y) {return x < y ? x : y;}
I int read() {
	reg x = 0, f = 1; char ch = getchar();
	while(ch < '0' || ch > '9') {if(ch == '-') f = -1; ch = getchar();}
	while(ch >= '0' && ch <= '9') x = (x << 3) + (x << 1) + (ch ^ 48), ch = getchar();
	return x * f;
}
I void ptt(cr x) {if(x >= 10) ptt(x / 10); putchar(x % 10 + '0');}
I void put(cr x) {x < 0 ? putchar('-'), ptt(-x) : ptt(x);}
I void pr1(cr x) {put(x), putchar(' ');}
I void pr2(cr x) {put(x), puts("");}

struct edge {
	int x, y, next;
} e[N * 2]; int len, last[N];
set<int> s;
map<int, int> o[N];
queue<int> q;
int tp, sta[N];
bool v[N];

I void ins(cr x, cr y) {e[++len] = edge{x, y, last[x]}, last[x] = len;}

void gao(cr x) {
	s.erase(x);
	q.push(x); v[x] = 1;
	while(!q.empty()) {
		reg x = q.front(); q.pop();
		for(auto y : s) {
			if(!o[x].count(y)) {
				v[y] = 1, sta[++tp] = y;
				q.push(y);
			}
		} while(tp) s.erase(sta[tp--]);
	}
}

int main() {
	reg n = read(), m = read();
	for(reg i = 1; i <= n; i++) s.insert(i);
	for(reg i = 1; i <= m; i++) {
		reg x = read(), y = read();
		o[x][y] = 1, o[y][x] = 1;
	} reg cnt = 0;
	for(reg i = 1; i <= n; i++) if(!v[i]) gao(i), cnt++;
	pr2(cnt - 1);
	return 0;
}

