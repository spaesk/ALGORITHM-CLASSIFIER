#include<bits/stdc++.h>
using namespace std;
#define fastIO ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define int long long
#define fi first
#define se second
#define pub push_back
#define endl "\n"
#define mkp make_pair
#define pi pair<int,int>
#define all(v) (v).begin(), (v).end()
#define rep(i, l, r) for(int i=(int)(l);i<(int)(r);i++)
#define repd(i, l, r) for (int i=(int)(l);i>=(int)(r);i--)
int power(int x, unsigned int y){int res = 1;while (y > 0){ if (y & 1){res = res*x;} y = y>>1;x = x*x;}return res;}
int powermod(int x, unsigned int y, int p){int res = 1;x = x % p;while (y > 0){if (y & 1){res = (res*x) % p;}y = y>>1; x = (x*x) % p;}return res;}
#define print2d(mat,n,m){for(int i=0;i<(int)(n);i++){for(int j=0;j<(m);j++){cout<<mat[i][j]<<" "<< "endl"[j == m];}}}
#define clr(a,x) memset(a,x,sizeof(a))
#define rr(v) for(auto &val:v)
#define print(v) for (const auto itr:v){cout<<itr<<' ';}cout<<endl;
#define init(v,x) for (auto &itr:v){itr=x;}
#define ln length()
#define sz size()
int arr[200005],vis[200005],n,idx[200005];
vector<int> v[200005];
bool mycomp(int a,int b){return idx[a]<idx[b];}
bool bfs(){
    rep(i,0,n){idx[arr[i]]=i;}
    rep(i,1,n+1){sort(all(v[i]),mycomp);}
    queue<int> que;
    que.push(1);
    vector<int> temp;
    temp.pub(1);
    vis[1]=1;
    while(!que.empty()){
        int node=que.front();
        que.pop();
        rr(v[node]){if(vis[val]){continue;}vis[val]=1;temp.pub(val);que.push(val);}
    }
    if(temp.sz!=n)return false;
    rep(i,0,n){if(temp[i]!=arr[i])return false;}
    return true;
}
main(){
    //fastIO
    cin >>n;
    rep(i,0,n-1){
        int u,d;
        cin>>u>>d;
        v[u].pub(d);
        v[d].pub(u);
    }
    rep(i,0,n){cin>>arr[i];}
    (bfs()) ? cout<<"YES" : cout<<"NO";
}
